from Crypto.Util.number import long_to_bytes
from gmpy2 import invert

p = 8945946816932340328533943098680243823775095028070087443266477222314309300190697137498189579915494746962560790497911126108796257153038841442428957067186233
q = 12542692938519914169327929021905716601881114073279954819623313320125314902730267851328412684899408138879195684498676314125963670441927151869558387990474583
e = 65537
c = 11695244018758501166802740637889000044420215482604433627350844548031137030727777361223400906028048689540165819826048140750200745758903539462369326704990412560375489731258689741393279254973857938028621953910450694076548901516391357946011265569544024418567135056867713278643410415598998526981520437536291154813

n = p * q
phi = (p-1)*(q-1)
d = invert(e, phi)
m = pow(c, d, n)
flag = long_to_bytes(m)
print(flag)
flag = bytes.fromhex(hex(m)[2:])
print(flag)