#-*-coding:gb2312-*-
from Crypto.Util.number import *
from gmpy2 import gcd
n1 = 16924001456325892170241615255001206974043911973702356841710856126092164885265778428342957445160558678290284705661396230667754822994331572613764005587346019255019737005754945178814250090267004723303867796377051797788406243420853604386400742094634885439237075066443068156472628434928859866913744508854812330217882503275493855962064314827199019263651441884686831093339450159078083968644645631597993040563199855053029160201894156445723542780642987164284173440611143833504899987743277314431661966478196026080073437246165093036762056040858453446725343530402183178226328574332015002451021483275687425689597845946896544539351
n2 = 11625317812816518246819226856420071177927576042809058944711258131949001331123803587112571643458038616551535521007598610257697798881347147313148584961495342289978639445846215594409576027023409733947338296453972462764109492601294103925033425069771090786439855658878368133717766705962682194359518750038675745214267070408305270502940505393272823209569790178050770279686718081013162797255822131292266408648393176364346314938177734824265294316456886784924794912330467495925241112633835432447630646655039531597999999365198106655483128900986247731052994749943021215026121248377721641629484786301116455710862783264303978247119
e = 65537
c = 3816790986146368447310827647859931350335920034102078986832970160397366879610689989386040922368629836907113156092526688176899882485971905992999404842288902881241701938594578915538076879696978365116009454963991268302685807211326845380485511435775332525344306790608663811197467412682536407808341015109804075806354679779263017039952546096850435614619799479487621972803663745377312193976158617207181608466497984179327205592474415643126681507897522823421818478967704759566893104091325769842260508512467550818473689279550839716844559458421171249481677752744455698988508174684993682432570404895618017905815365822747568772203
q = gcd(n1,n2)
p1 = n1 // q
p2 = n2 // q
fn1 = (q - 1) * (p1 - 1)  # 求下面的&n
fn2 = (q - 1) * (p2 - 1)  # 求上面的&n
d1 = inverse(e, fn1)  # (de)mod((p-1)*(q-1))=1  求到第一次解密密钥d1
d2 = inverse(e, fn2)  # 求出第二次解密密钥d2
m = pow(c, d2, n2)  # 先对第二次加密进行解密
m = pow(m, d1, n1)  # 用第二次解密结果继续解密
print(long_to_bytes(m))