from gmpy2 import iroot,invert, next_prime

n = 78564426744659953252871015603251208500289672099735883238926101011930844097184572553868883293487225572705540924277731986603232329341949615579388771602314886281979401091753748778476395198487480109660110572879773371442722384624586829694539978773430181538994600134552645048796238366066533080410113910896422356257
c = 7945231206701210298533752655548399540239741806272918314557586091498219102357549096074628042147456274769807114700885899864282255184278181078647652510503975489398550743997603696406640572508408188702968214336562073518853450339884196714534829537072056923024991132744134410091812405712361591503362116155488759436
e = 65537

q = next_prime(iroot(n, 2)[0])
p = n // q
assert p*q == n

phi = (p-1) * (q-1)
d = invert(e, phi)
m = pow(c, d, n)
flag = bytes.fromhex(hex(m)[2:])
print(flag)